" vimrc - vim settings
" Author: Kevin Durbin
" vim: set fdm=marker expandtab ts=2 sw=2:

" {{{ Plugins

call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-sensible'         " a good place to start

Plug 'NLKNguyen/papercolor-theme' " paper color scheme

Plug 'kevindurb/vim-statusline'   " statusline
Plug 'kevindurb/vim-editor'       " basic editor settings
Plug 'kevindurb/vim-splits'       " split settings and keymaps
Plug 'kevindurb/vim-quicksilver'  " use ag for amazing things
Plug 'kevindurb/vim-whiteout'     " show trailing whitespace

Plug 'tpope/vim-commentary'       " sweet commenting
Plug 'tpope/vim-fugitive'         " git commands in vim
Plug 'tpope/vim-repeat'           " repeating plugin commands
Plug 'tpope/vim-sleuth'           " auto detect tab settings
Plug 'tpope/vim-surround'         " surround with things
Plug 'tpope/vim-unimpaired'       " mappings for things with '['
Plug 'tpope/vim-vinegar'          " browse directories with -
Plug 'tpope/vim-dispatch'         " run builds and tests within vim

Plug 'moll/vim-node'              " add gf capabilities for js imports
Plug 'sheerun/vim-polyglot'       " all the syntax files!
Plug 'w0rp/ale'                   " syntax and style checking
Plug 'ctrlpvim/ctrlp.vim'         " fuzzy searching

call plug#end()

" }}}

" {{{ Plugin Settings

" ale settings
let g:ale_linters = {
\ 'javascript': ['eslint'],
\ 'javascript jsx': ['eslint'],
\}

" search tags with ctrl p
let g:ctrlp_extensions = ['tag']

" start ctrl p in the right place
let g:ctrlp_root_markers = [
\ 'package.json',
\ '.eslintrc.js',
\ '.tern-project',
\ '.git',
\]

" }}}

" {{{ Colorscheme

set background=dark    " Bringing light into the darkness
colorscheme PaperColor " colorscheme

" }}}

" {{{ Custom Commands

command! MakeTags !ctags -R .

" }}}

" {{{ File Type Settings

" set markdown to 80 characters wide
au BufRead,BufNewFile *.md setlocal textwidth=80

" spelling in markdown and commit messages
autocmd FileType markdown setlocal spell
autocmd FileType gitcommit setlocal spell

" }}}

" {{{ Keymaps

" remap leader
let mapleader=','

" reload vimrc
nnoremap <leader>r :so $HOME/.vim/vimrc<CR>

" kill all buffers
nnoremap <leader>q :bufdo bd<CR>

" }}}
