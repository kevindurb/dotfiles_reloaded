" vimrc - vim settings
" Author: Kevin Durbin
" vim: set fdm=marker expandtab ts=2 sw=2:

" {{{ Plugins
call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-sensible'              " a good place to start

Plug 'chriskempson/base16-vim'         " base16 colorscheme

Plug 'kevindurb/vim-statusline'        " statusline
Plug 'kevindurb/vim-splits'            " split settings and keymaps
Plug 'kevindurb/vim-whiteout'          " show trailing whitespace

Plug 'tpope/vim-commentary'            " sweet commenting
Plug 'tpope/vim-fugitive'              " git commands in vim
Plug 'tpope/vim-repeat'                " repeating plugin commands
Plug 'tpope/vim-surround'              " surround with things
Plug 'tpope/vim-unimpaired'            " mappings for things with '['
Plug 'tpope/vim-vinegar'               " browse directories with -

Plug 'christoomey/vim-tmux-navigator'  " navigate panes in tmux && vim
Plug 'moll/vim-node'                   " add gf capabilities for js imports
Plug 'sheerun/vim-polyglot'            " all the syntax files!
Plug 'w0rp/ale'                        " syntax and style checking
Plug 'Raimondi/delimitMate'            " auto pair brackets and such
Plug 'ElmCast/elm-vim'                 " elm fun!
Plug 'majutsushi/tagbar'               " show tags in a side bar
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'Valloric/YouCompleteMe', { 'do': './install.py' }

call plug#end()
" }}}

" {{{ Plugin Settings
" ale settings
let g:ale_linters = {
\ 'javascript': ['eslint', 'flow'],
\ 'javascript jsx': ['eslint', 'flow'],
\}
let g:ale_php_phpcs_standard = '--standard=/Users/kdurbin/Development/churchcommunitybuilder/app/src/phpcs_ruleset.xml'
let g:ale_lint_on_enter = 0
let g:ale_lint_on_insert_leave = 1
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 'normal'

" you complete me
let g:ycm_semantic_triggers = {
     \ 'elm' : ['.'],
     \}
" }}}

" {{{ Base Editor Config
set title                       " set title in terminal
set wildmode=longest:list,full  " make command completion more like zsh
set autowrite                   " save when you change buffers
set clipboard=unnamed           " copy and paste in system clipboard
set showtabline=2               " always show the tabline
set complete+=kspell            " add dictionary to completion
set tags=tags;/                 " make ctags look up from cwd for tags file
set nowrap                      " NO WRAPPING LINES
set smartindent                 " auto indents c-like blocks
set shiftround                  " round indent to shiftwidth
set cursorline                  " turn on cursor horizontal line
set colorcolumn=80              " color line at 80 columns
set number                      " but still show current line number
set relativenumber              " show relative line numbers
set showmatch                   " highlight matching brace
set ignorecase                  " ignore search case
set smartcase                   " dont ignore case once you use a capital
set hlsearch                    " highlight all search matches
set undolevels=1000             " holds last 1000 undos
set backupdir=$HOME/.vim/backup " backup files in one place
set directory=$HOME/.vim/backup " swp files in one place
" }}}

" {{{ Colorscheme
if filereadable(expand("~/.vimrc_background"))
  let base16colorspace=256
  source ~/.vimrc_background
endif

hi StatusLine   ctermfg=00 ctermbg=12 cterm=NONE
hi StatusLineNC ctermfg=20 ctermbg=19 cterm=NONE
" }}}

" {{{ Custom Commands
command! MakeTags !ctags -R .
" }}}

" {{{ Searching
" if you have ag use ag for vimgrep and ctrlp
if executable('rg')
  set grepprg=rg\ --vimgrep
endif

" Ag command for searching in vim
command! -nargs=+ -complete=file -bar Rg silent! grep! <args>|cwindow|redraw!

" K keymap for searching word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>
" }}}

" {{{ File Type Settings
" set markdown to 80 characters wide
au BufRead,BufNewFile *.md setlocal textwidth=80

" spelling in markdown and commit messages
autocmd FileType markdown setlocal spell
autocmd FileType gitcommit setlocal spell
" }}}

" {{{ Indent Settings
set tabstop=2                   " columns per tab
set shiftwidth=2                " spaces per indent
set softtabstop=2               " spaces per tab
set expandtab                   " use soft tabs
set smartindent                 " auto indents c-like blocks
set shiftround                  " round indent to shiftwidth

augroup language_tabbing
  autocmd!
  autocmd Filetype php        setlocal ts=4 sts=4 sw=4 noexpandtab
  autocmd Filetype javascript setlocal ts=2 sts=2 sw=2 expandtab
  autocmd Filetype css        setlocal ts=2 sts=2 sw=2 expandtab
  autocmd Filetype html       setlocal ts=2 sts=2 sw=2 expandtab
augroup END
" }}}

" {{{ Keymaps
" remap leader
let mapleader=','

" reload vimrc
nnoremap <leader>r :so $HOME/.vim/vimrc<CR>

" FZF on ctrl-p
nnoremap <c-p> :FZF<CR>

" toggle tagbar
nmap <leader>] :TagbarToggle<CR>
" }}}
