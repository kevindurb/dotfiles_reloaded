" #############################################################################
" Vim Settings - Kevin Durbin
" #############################################################################
set nocompatible

" #############################################################################
" Plugins
" #############################################################################

call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-sensible'                " a good place to start

Plug 'treycucco/vim-monotonic'           " trey's theme

Plug 'tpope/vim-commentary'              " sweet commenting
Plug 'tpope/vim-repeat'                  " repeating plugin commands
Plug 'tpope/vim-surround'                " surround with things
Plug 'tpope/vim-unimpaired'              " mappings for things with '['
Plug 'tpope/vim-vinegar'                 " browse directories with -
Plug 'tpope/vim-fugitive'                " git commands in vim

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'                  " fzf mappings

Plug 'christoomey/vim-tmux-navigator'    " pane navigation
Plug 'ervandew/supertab'                 " trigger completion with tab
Plug 'moll/vim-node'                     " add gf capabilities for js imports
Plug 'ntpeters/vim-better-whitespace'    " show extra whitespace
Plug 'sheerun/vim-polyglot'              " all the syntax files!
Plug 'w0rp/ale'                          " syntax and style checking
Plug 'kshenoy/vim-signature'             " show marks in gutter

call plug#end()

" #############################################################################
" Plugin Settings
" #############################################################################

" ale settings
let g:ale_linters = {
\ 'javascript': ['eslint'],
\ 'javascript jsx': ['eslint'],
\}

" #############################################################################
" Vim Settings
" #############################################################################

set tabstop=2                   " columns per tab
set shiftwidth=2                " spaces per indent
set softtabstop=2               " spaces per tab
set expandtab                   " use soft tabs
set smartindent                 " auto indents c-like blocks
set shiftround                  " round indent to shiftwidth

set noshowmode                  " let airline deal with showing mode
set splitbelow                  " horizontal splits open down
set splitright                  " vertical splits open right
set relativenumber              " relative line numbers
set number                      " but still show current line number
set nowrap                      " NO WRAPPING LINES
set autowrite                   " save when you change buffers
set showmatch                   " highlight matching brace
set cursorline                  " turn on cursor horizontal line
set wildmode=longest:list,full  " make command completion more like zsh
set ignorecase                  " ignore search case
set smartcase                   " dont ignore case once you use a capital
set hlsearch                    " highlight all search matches
set incsearch                   " jump to search
set clipboard=unnamed           " copy and paste in system clipboard
set history=1000                " holds last 1000 commands in command line
set undolevels=1000             " holds last 1000 undos
set backupdir=$HOME/.vim/backup " backup files in one place
set directory=$HOME/.vim/backup " swp files in one place
set title                       " set title in terminal
set colorcolumn=80              " color line at 80 columns
set complete+=kspell            " add dictionary to completion

set background=dark             " Bringing light into the darkness
colorscheme monotonic           " dark version of tomorrow theme

" #############################################################################
" Vimgrep, Silver Searcher
" #############################################################################

if executable('ag')
  set grepprg=ag\ --vimgrep
endif

command! -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!

" #############################################################################
" File Type Settings
" #############################################################################

augroup language_tabbing
  autocmd!
  autocmd Filetype php        setlocal ts=4 sts=4 sw=4 noexpandtab
  autocmd Filetype javascript setlocal ts=2 sts=2 sw=2 expandtab
  autocmd Filetype css        setlocal ts=2 sts=2 sw=2 expandtab
  autocmd Filetype html       setlocal ts=2 sts=2 sw=2 expandtab
augroup END

" set markdown to 80 characters wide
au BufRead,BufNewFile *.md setlocal textwidth=80

" spelling in markdown and commit messages
autocmd FileType markdown setlocal spell
autocmd FileType gitcommit setlocal spell

" #############################################################################
" Keymaps
" #############################################################################

" remap leader
let mapleader=','

" quick splits
nnoremap <leader>v :vsp<CR>
nnoremap <leader>V :sp<CR>

" complete a tag
imap <C-e> <Esc>yi>f>a</<Esc>pa><Esc>F<i

" run FZF on Ctrl-p
nnoremap <C-p> :Files<CR>

" reload vimrc
nnoremap <leader>r :so $HOME/.vim/vimrc<CR>

" #############################################################################
" Status Line
" #############################################################################

set statusline=\                      " space
set statusline+=%t                    " path to the file
set statusline+=\                     " space
set statusline+=%{fugitive#head(5)}   " git status
set statusline+=\                     " space
set statusline+=%m                    " modified
set statusline+=\                     " space
set statusline+=%r                    " readonly
set statusline+=\                     " space
set statusline+=%q                    " quickfix / locationlist
set statusline+=%=                    " switch to the right side
set statusline+=%{ALEGetStatusLine()} " errors and warnings
set statusline+=\                     " space
set statusline+=%y                    " file type
set statusline+=\                     " space
set statusline+=%c                    " current column
set statusline+=,                     " hyphen
set statusline+=%l                    " current line
set statusline+=/                     " slash
set statusline+=%L                    " total lines
set statusline+=\                     " space
