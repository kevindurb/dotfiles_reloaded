" #################################################################################################
" Plug ############################################################################################
" #################################################################################################

" we are iMproved
set nocompatible

" start plug
call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-sensible'                           " a good place to start

Plug 'chriskempson/tomorrow-theme', {'rtp': 'vim/'} " color scheme!!

Plug 'vim-airline/vim-airline'                      " pretty status line
Plug 'vim-airline/vim-airline-themes'               " pretty status line themes

Plug 'tpope/vim-commentary'                         " sweet commenting
Plug 'tpope/vim-repeat'                             " better repeating plugin commands
Plug 'tpope/vim-surround'                           " surround with things
Plug 'tpope/vim-unimpaired'                         " common mappings forr cool things with '[]'
Plug 'tpope/vim-vinegar'                            " use minus (-) to go up a dir

Plug 'Raimondi/delimitMate'                         " auto complete brackets and quotes
Plug 'airblade/vim-gitgutter'                       " git status in gutter
Plug 'chip/vim-fat-finger'                          " easy fixes for my bad lesdixia
Plug 'ctrlpvim/ctrlp.vim'                           " find files quickly
Plug 'ervandew/supertab'                            " trigger completion with tab
Plug 'kshenoy/vim-signature'                        " show marks in gutter
Plug 'matchit.zip'                                  " matching with % for more things
Plug 'ntpeters/vim-better-whitespace'               " show extra whitespace
Plug 'rstacruz/sparkup', {'rtp': 'vim/'}            " easily create html from css selectors
Plug 'scrooloose/syntastic'                         " syntax linter
Plug 'sheerun/vim-polyglot'                         " all the syntax files!
Plug 'skammer/vim-css-color'                        " turns hex and rgb into colors
Plug 'terryma/vim-multiple-cursors'                 " multiple cursors in vim

" end plug
call plug#end()

" #################################################################################################
" Plugin Settings #################################################################################
" #################################################################################################

" syntastic settings
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_jsx_checkers = ['eslint']

" autoclose
let g:AutoCloseExpandSpace = 0

" airline look pretty
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#whitespace#enabled = 0
let g:airline#extensions#tabline#buffer_nr_show = 1
let g:airline_left_sep = ''
let g:airline_right_sep = ''

" dont echo the bufferline
let g:bufferline_echo = 0

" dont match carrots
let delimitMate_matchpairs = "(:),[:],{:}"

" ctrl p exclude
let g:ctrlp_root_markers = ['package.json', '.eslintrc.js', '.tern-project']

" disable markdown in polyglot
let g:polyglot_disabled = ['markdown']

" #################################################################################################
" File Type Settings ##############################################################################
" #################################################################################################

" per language tabbing
augroup language_tabbing
  autocmd!
  autocmd Filetype php        setlocal ts=4 sts=4 sw=4 noexpandtab
  autocmd Filetype javascript setlocal ts=2 sts=2 sw=2 expandtab
  autocmd Filetype scss       setlocal ts=2 sts=2 sw=2 expandtab
  autocmd Filetype css        setlocal ts=2 sts=2 sw=2 expandtab
  autocmd Filetype ruby       setlocal ts=2 sts=2 sw=2 expandtab
  autocmd Filetype html       setlocal ts=2 sts=2 sw=2 expandtab
  autocmd Filetype coffee     setlocal foldmethod=indent nofoldenable
augroup END

" run sparkup for jsx
augroup sparkup_types
  autocmd!
  autocmd Filetype javascript runtime! ftplugin/html/sparkup.vim
augroup END

" #################################################################################################
" Vim Settings ####################################################################################
" #################################################################################################

" change the cursor in different modes
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

set tabstop=2                   " columns per tab
set shiftwidth=2                " spaces per indent
set softtabstop=2               " spaces per tab
set expandtab                   " use soft tabs
set smartindent                 " auto indents c-like blocks
set shiftround                  " round indent to shiftwidth

set noshowmode                  " let airline deal with showing mode
set splitbelow                  " horizontal splits open down
set splitright                  " vertical splits open right
set relativenumber              " relative line numbers
set number                      " but still show current line number
set nowrap                      " NO WRAPPING LINES
set autowrite                   " save when you change buffers
set showmatch                   " highlight matching brace
set cursorline                  " turn on cursor horizontal line
set cursorcolumn                " turn on cursor vertical line
set wildmode=longest:list,full  " make command completion more like zsh
set ignorecase                  " ignore search case
set smartcase                   " dont ignore case once you use a capital letter
set hlsearch                    " highlight all search matches
set incsearch                   " jump to search
set clipboard=unnamed           " copy and paste in system clipboard
set history=1000                " holds last 1000 commands in command line
set undolevels=1000             " holds last 1000 undos
set backupdir=$HOME/.vim/backup " backup files in one place
set directory=$HOME/.vim/backup " swp files in one place
set title                       " set title in terminal
set colorcolumn=100             " color line at 100 columns

" colorscheme stuff
set background=dark
colorscheme tomorrow-night

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" #################################################################################################
" Keymaps #########################################################################################
" #################################################################################################

" map leader to comma for speed!!!
let mapleader = ','

" split control
nnoremap <leader>v		 :vsp<CR>
nnoremap <leader><S-v> :sp<CR>
nnoremap <leader>z		 <c-w>o

" disable arrow keys
inoremap <up>	    <nop>
inoremap <down>	  <nop>
inoremap <left>	  <nop>
inoremap <right>	<nop>
nnoremap <up>	    <nop>
nnoremap <down>	  <nop>
nnoremap <left>	  <nop>
nnoremap <right>	<nop>
vnoremap <up>	    <nop>
vnoremap <down>	  <nop>
vnoremap <left>	  <nop>
vnoremap <right>	<nop>

" awesome moving between splits
nnoremap <C-h> <C-w><C-h>
nnoremap <C-j> <C-w><C-j>
nnoremap <C-k> <C-w><C-k>
nnoremap <C-l> <C-w><C-l>
inoremap <C-h> <C-w><C-h>
inoremap <C-j> <C-w><C-j>
inoremap <C-k> <C-w><C-k>
inoremap <C-l> <C-w><C-l>
vnoremap <C-h> <C-w><C-h>
vnoremap <C-j> <C-w><C-j>
vnoremap <C-k> <C-w><C-k>
vnoremap <C-l> <C-w><C-l>

" K will Ag word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" remove highlight
nnoremap <leader>n :noh<CR>
