" vimrc - vim settings
" Author: Kevin Durbin
" vim: set fdm=marker expandtab ts=2 sw=2:

" {{{ Plugins

call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-sensible'             " a good place to start

Plug 'chriskempson/base16-vim'        " base16 colorscheme

Plug 'kevindurb/vim-statusline'       " statusline
Plug 'kevindurb/vim-splits'           " split settings and keymaps
Plug 'kevindurb/vim-quicksilver'      " use ag for amazing things
Plug 'kevindurb/vim-whiteout'         " show trailing whitespace
Plug 'kevindurb/vim-magiccursor'      " cursor pipe / block

Plug 'tpope/vim-commentary'           " sweet commenting
Plug 'tpope/vim-fugitive'             " git commands in vim
Plug 'tpope/vim-repeat'               " repeating plugin commands
Plug 'tpope/vim-sleuth'               " auto detect tab settings
Plug 'tpope/vim-surround'             " surround with things
Plug 'tpope/vim-unimpaired'           " mappings for things with '['
Plug 'tpope/vim-vinegar'              " browse directories with -
Plug 'tpope/vim-dispatch'             " run builds and tests within vim

Plug 'christoomey/vim-tmux-navigator' " navigate panes in tmux && vim
Plug 'moll/vim-node'                  " add gf capabilities for js imports
Plug 'sheerun/vim-polyglot'           " all the syntax files!
Plug 'w0rp/ale'                       " syntax and style checking
Plug 'ctrlpvim/ctrlp.vim'             " fuzzy searching

call plug#end()

" }}}

" {{{ Plugin Settings

" ale settings
let g:ale_linters = {
\ 'javascript': ['eslint'],
\ 'javascript jsx': ['eslint'],
\}

" search tags with ctrl p
let g:ctrlp_extensions = ['tag']

" start ctrl p in the right place
let g:ctrlp_root_markers = [
\ 'package.json',
\ '.eslintrc.js',
\ '.tern-project',
\ '.git',
\]

" }}}

" {{{ Base Editor Config

set title                       " set title in terminal
set wildmode=longest:list,full  " make command completion more like zsh
set autowrite                   " save when you change buffers
set clipboard=unnamed           " copy and paste in system clipboard
set showtabline=2               " always show the tabline
set complete+=kspell            " add dictionary to completion
set tags=tags;/                 " make ctags look up from cwd for tags file
set foldmethod=indent           " fold code based on intentation
set nowrap                      " NO WRAPPING LINES
set smartindent                 " auto indents c-like blocks
set shiftround                  " round indent to shiftwidth
set tabstop=2                   " show hard tabs as 2 columns
set cursorline                  " turn on cursor horizontal line
set colorcolumn=80              " color line at 80 columns
set number                      " but still show current line number
set relativenumber              " show relative line numbers
set showmatch                   " highlight matching brace
set ignorecase                  " ignore search case
set smartcase                   " dont ignore case once you use a capital
set hlsearch                    " highlight all search matches
set undolevels=1000             " holds last 1000 undos
set backupdir=$HOME/.vim/backup " backup files in one place
set directory=$HOME/.vim/backup " swp files in one place

" }}}

" {{{ Colorscheme

if filereadable(expand("~/.vimrc_background"))
  let base16colorspace=256
  source ~/.vimrc_background
endif

" }}}

" {{{ Custom Commands

command! MakeTags !ctags -R .

" }}}

" {{{ File Type Settings

" set markdown to 80 characters wide
au BufRead,BufNewFile *.md setlocal textwidth=80

" spelling in markdown and commit messages
autocmd FileType markdown setlocal spell
autocmd FileType gitcommit setlocal spell

" }}}

" {{{ Keymaps

" remap leader
let mapleader=','

" reload vimrc
nnoremap <leader>r :so $HOME/.vim/vimrc<CR>

" kill all buffers
nnoremap <leader>q :bufdo bd<CR>

" }}}
